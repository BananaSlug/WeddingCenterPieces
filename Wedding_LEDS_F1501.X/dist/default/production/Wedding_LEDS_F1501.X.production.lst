

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Aug 14 19:52:24 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	12F1501
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  0008                     	;# 
    20  0009                     	;# 
    21  000A                     	;# 
    22  000B                     	;# 
    23  000C                     	;# 
    24  0011                     	;# 
    25  0012                     	;# 
    26  0013                     	;# 
    27  0015                     	;# 
    28  0016                     	;# 
    29  0016                     	;# 
    30  0017                     	;# 
    31  0018                     	;# 
    32  0019                     	;# 
    33  001A                     	;# 
    34  001B                     	;# 
    35  001C                     	;# 
    36  008C                     	;# 
    37  0091                     	;# 
    38  0092                     	;# 
    39  0093                     	;# 
    40  0095                     	;# 
    41  0096                     	;# 
    42  0097                     	;# 
    43  0099                     	;# 
    44  009A                     	;# 
    45  009B                     	;# 
    46  009B                     	;# 
    47  009C                     	;# 
    48  009D                     	;# 
    49  009E                     	;# 
    50  009F                     	;# 
    51  010C                     	;# 
    52  0111                     	;# 
    53  0112                     	;# 
    54  0115                     	;# 
    55  0116                     	;# 
    56  0117                     	;# 
    57  0118                     	;# 
    58  0119                     	;# 
    59  011D                     	;# 
    60  018C                     	;# 
    61  0191                     	;# 
    62  0191                     	;# 
    63  0192                     	;# 
    64  0193                     	;# 
    65  0193                     	;# 
    66  0194                     	;# 
    67  0195                     	;# 
    68  0196                     	;# 
    69  0197                     	;# 
    70  020C                     	;# 
    71  0391                     	;# 
    72  0392                     	;# 
    73  0393                     	;# 
    74  0498                     	;# 
    75  0498                     	;# 
    76  0499                     	;# 
    77  049A                     	;# 
    78  049B                     	;# 
    79  049B                     	;# 
    80  049C                     	;# 
    81  049E                     	;# 
    82  049F                     	;# 
    83  0611                     	;# 
    84  0612                     	;# 
    85  0613                     	;# 
    86  0613                     	;# 
    87  0614                     	;# 
    88  0615                     	;# 
    89  0616                     	;# 
    90  0616                     	;# 
    91  0617                     	;# 
    92  0618                     	;# 
    93  0619                     	;# 
    94  0619                     	;# 
    95  061A                     	;# 
    96  061B                     	;# 
    97  061C                     	;# 
    98  061C                     	;# 
    99  0691                     	;# 
   100  0692                     	;# 
   101  0693                     	;# 
   102  0694                     	;# 
   103  0695                     	;# 
   104  0F0F                     	;# 
   105  0F10                     	;# 
   106  0F11                     	;# 
   107  0F12                     	;# 
   108  0F13                     	;# 
   109  0F14                     	;# 
   110  0F15                     	;# 
   111  0F16                     	;# 
   112  0F17                     	;# 
   113  0F18                     	;# 
   114  0F19                     	;# 
   115  0F1A                     	;# 
   116  0F1B                     	;# 
   117  0F1C                     	;# 
   118  0F1D                     	;# 
   119  0F1E                     	;# 
   120  0F1F                     	;# 
   121  0FE3                     	;# 
   122  0FE4                     	;# 
   123  0FE5                     	;# 
   124  0FE6                     	;# 
   125  0FE7                     	;# 
   126  0FE8                     	;# 
   127  0FE9                     	;# 
   128  0FEA                     	;# 
   129  0FEB                     	;# 
   130  0FED                     	;# 
   131  0FEE                     	;# 
   132  0FEF                     	;# 
   133  0011                     _PIR1bits	set	17
   134  001B                     _PR2	set	27
   135  001C                     _T2CONbits	set	28
   136  009D                     _ADCON0bits	set	157
   137  0099                     _OSCCONbits	set	153
   138  008C                     _TRISAbits	set	140
   139  0118                     _DACCON0bits	set	280
   140  018C                     _ANSELAbits	set	396
   141  0613                     _PWM1CON	set	1555
   142  0612                     _PWM1DCH	set	1554
   143  0611                     _PWM1DCL	set	1553
   144  0619                     _PWM3CON	set	1561
   145  0618                     _PWM3DCH	set	1560
   146  0617                     _PWM3DCL	set	1559
   147  061C                     _PWM4CON	set	1564
   148  061B                     _PWM4DCH	set	1563
   149  061A                     _PWM4DCL	set	1562
   150                           
   151                           	psect	text0
   152  0000                     __ptext0:	
   153                           ; #config settings
   154                           
   155                           
   156                           ;psect for function _SetDutyCycle
   157  0000                     
   158                           	psect	cinit
   159  03FE                     start_initialization:	
   160  03FE                     __initialization:	
   161  03FE                     end_of_initialization:	
   162                           ;End of C runtime variable initialization code
   163                           
   164  03FE                     __end_of__initialization:	
   165  03FE  0020               	movlb	0
   166  03FF  2A3B               	ljmp	_main	;jump to C main() function
   167                           
   168                           	psect	cstackCOMMON
   169  0070                     __pcstackCOMMON:	
   170  0070                     ?_SetDutyCycle:	
   171  0070                     SetDutyCycle@Channel:	
   172                           ; 0 bytes @ 0x0
   173                           
   174                           
   175                           ; 2 bytes @ 0x0
   176  0070                     	ds	2
   177  0072                     SetDutyCycle@duty_cycle_value:	
   178                           
   179                           ; 2 bytes @ 0x2
   180  0072                     	ds	2
   181  0074                     ??_SetDutyCycle:	
   182                           
   183                           ; 0 bytes @ 0x4
   184  0074                     	ds	2
   185  0076                     ?_main:	
   186  0076                     main@argc:	
   187                           ; 2 bytes @ 0x6
   188                           
   189                           
   190                           ; 2 bytes @ 0x6
   191  0076                     	ds	2
   192  0078                     main@argv:	
   193                           
   194                           ; 2 bytes @ 0x8
   195  0078                     	ds	2
   196  007A                     ??_main:	
   197                           
   198                           ; 0 bytes @ 0xA
   199  007A                     	ds	3
   200                           
   201                           	psect	cstackBANK0
   202  0020                     __pcstackBANK0:	
   203  0020                     main@i_232:	
   204                           
   205                           ; 2 bytes @ 0x0
   206  0020                     	ds	2
   207  0022                     main@i_234:	
   208                           
   209                           ; 2 bytes @ 0x2
   210  0022                     	ds	2
   211  0024                     main@i_236:	
   212                           
   213                           ; 2 bytes @ 0x4
   214  0024                     	ds	2
   215  0026                     main@i_238:	
   216                           
   217                           ; 2 bytes @ 0x6
   218  0026                     	ds	2
   219  0028                     main@Duty_cycle2:	
   220                           
   221                           ; 2 bytes @ 0x8
   222  0028                     	ds	2
   223  002A                     _main$229:	
   224                           
   225                           ; 1 bytes @ 0xA
   226  002A                     	ds	1
   227  002B                     main@i:	
   228                           
   229                           ; 2 bytes @ 0xB
   230  002B                     	ds	2
   231  002D                     main@i_233:	
   232                           
   233                           ; 2 bytes @ 0xD
   234  002D                     	ds	2
   235  002F                     main@i_235:	
   236                           
   237                           ; 2 bytes @ 0xF
   238  002F                     	ds	2
   239  0031                     main@i_237:	
   240                           
   241                           ; 2 bytes @ 0x11
   242  0031                     	ds	2
   243  0033                     main@Curr_chan:	
   244                           
   245                           ; 2 bytes @ 0x13
   246  0033                     	ds	2
   247  0035                     main@light_delay:	
   248                           
   249                           ; 2 bytes @ 0x15
   250  0035                     	ds	2
   251  0037                     main@Duty_cycle:	
   252                           
   253                           ; 2 bytes @ 0x17
   254  0037                     	ds	2
   255                           
   256                           	psect	maintext
   257  023B                     __pmaintext:	
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 73 in file "main_1501.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;  argc            2    6[COMMON] int 
   266 ;;  argv            2    8[COMMON] PTR PTR unsigned char 
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  i               2    6[BANK0 ] int 
   269 ;;  i               2    4[BANK0 ] int 
   270 ;;  i               2    2[BANK0 ] int 
   271 ;;  i               2    0[BANK0 ] int 
   272 ;;  i               2   17[BANK0 ] int 
   273 ;;  i               2   15[BANK0 ] int 
   274 ;;  i               2   13[BANK0 ] int 
   275 ;;  i               2   11[BANK0 ] int 
   276 ;;  Duty_cycle      2   23[BANK0 ] int 
   277 ;;  light_delay     2   21[BANK0 ] int 
   278 ;;  Curr_chan       2   19[BANK0 ] int 
   279 ;;  Duty_cycle2     2    8[BANK0 ] int 
   280 ;; Return value:  Size  Location     Type
   281 ;;                  2    6[COMMON] int 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B1F/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0
   289 ;;      Params:         4       0
   290 ;;      Locals:         0      25
   291 ;;      Temps:          3       0
   292 ;;      Totals:         7      25
   293 ;;Total ram usage:       32 bytes
   294 ;; Hardware stack levels required when called:    1
   295 ;; This function calls:
   296 ;;		_SetDutyCycle
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           
   303                           ;psect for function _main
   304  023B                     _main:	
   305                           
   306                           ;main_1501.c: 92: OSCCONbits.IRCF=0x0F;
   307                           
   308                           ;incstack = 0
   309                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   310  023B  3078               	movlw	120
   311  023C  0021               	movlb	1	; select bank1
   312  023D  0499               	iorwf	25,f	;volatile
   313                           
   314                           ;main_1501.c: 93: OSCCONbits.SCS=0x02;
   315  023E  0819               	movf	25,w	;volatile
   316  023F  39FC               	andlw	-4
   317  0240  3802               	iorlw	2
   318  0241  0099               	movwf	25	;volatile
   319                           
   320                           ;main_1501.c: 97: ANSELAbits.ANSELA=0;
   321  0242  30C0               	movlw	-64
   322  0243  0023               	movlb	3	; select bank3
   323  0244  058C               	andwf	12,f	;volatile
   324                           
   325                           ;main_1501.c: 98: ADCON0bits.ADON=0;
   326  0245  0021               	movlb	1	; select bank1
   327  0246  101D               	bcf	29,0	;volatile
   328                           
   329                           ;main_1501.c: 99: DACCON0bits.DACEN=0;
   330  0247  0022               	movlb	2	; select bank2
   331  0248  1398               	bcf	24,7	;volatile
   332                           
   333                           ;main_1501.c: 102: TRISAbits.TRISA0 = 0;
   334  0249  0021               	movlb	1	; select bank1
   335  024A  100C               	bcf	12,0	;volatile
   336                           
   337                           ;main_1501.c: 103: TRISAbits.TRISA1 = 0;
   338  024B  108C               	bcf	12,1	;volatile
   339                           
   340                           ;main_1501.c: 104: TRISAbits.TRISA2 = 0;
   341  024C  110C               	bcf	12,2	;volatile
   342                           
   343                           ;main_1501.c: 105: TRISAbits.TRISA3 = 0;
   344  024D  118C               	bcf	12,3	;volatile
   345                           
   346                           ;main_1501.c: 106: TRISAbits.TRISA4 = 0;
   347  024E  120C               	bcf	12,4	;volatile
   348                           
   349                           ;main_1501.c: 107: TRISAbits.TRISA5 = 0;
   350  024F  128C               	bcf	12,5	;volatile
   351                           
   352                           ;main_1501.c: 127: TRISAbits.TRISA2 = 1;
   353  0250  150C               	bsf	12,2	;volatile
   354                           
   355                           ;main_1501.c: 128: TRISAbits.TRISA4 = 1;
   356  0251  160C               	bsf	12,4	;volatile
   357                           
   358                           ;main_1501.c: 129: TRISAbits.TRISA5 = 1;
   359  0252  168C               	bsf	12,5	;volatile
   360                           
   361                           ;main_1501.c: 131: PR2 = 0xff;
   362  0253  30FF               	movlw	255
   363  0254  0020               	movlb	0	; select bank0
   364  0255  009B               	movwf	27	;volatile
   365                           
   366                           ;main_1501.c: 133: PIR1bits.TMR2IF=0;
   367  0256  1091               	bcf	17,1	;volatile
   368                           
   369                           ;main_1501.c: 134: T2CONbits.T2CKPS=0x00;
   370  0257  30FC               	movlw	-4
   371  0258  059C               	andwf	28,f	;volatile
   372                           
   373                           ;main_1501.c: 135: T2CONbits.TMR2ON=1;
   374  0259  151C               	bsf	28,2	;volatile
   375                           
   376                           ;main_1501.c: 136: TRISAbits.TRISA2 = 0;
   377  025A  0021               	movlb	1	; select bank1
   378  025B  110C               	bcf	12,2	;volatile
   379                           
   380                           ;main_1501.c: 137: TRISAbits.TRISA4 = 0;
   381  025C  120C               	bcf	12,4	;volatile
   382                           
   383                           ;main_1501.c: 138: TRISAbits.TRISA5 = 0;
   384  025D  128C               	bcf	12,5	;volatile
   385                           
   386                           ;main_1501.c: 140: PWM1CON = 0b11000000;
   387  025E  30C0               	movlw	192
   388  025F  002C               	movlb	12	; select bank12
   389  0260  0093               	movwf	19	;volatile
   390                           
   391                           ;main_1501.c: 141: PWM3CON = 0b11000000;
   392  0261  30C0               	movlw	192
   393  0262  0099               	movwf	25	;volatile
   394                           
   395                           ;main_1501.c: 142: PWM4CON = 0b11000000;
   396  0263  30C0               	movlw	192
   397  0264  009C               	movwf	28	;volatile
   398                           
   399                           ;main_1501.c: 150: int Duty_cycle = 0;
   400  0265  0020               	movlb	0	; select bank0
   401  0266  01B7               	clrf	main@Duty_cycle
   402  0267  01B8               	clrf	main@Duty_cycle+1
   403                           
   404                           ;main_1501.c: 151: int Duty_cycle2 = 0;
   405  0268  01A8               	clrf	main@Duty_cycle2
   406  0269  01A9               	clrf	main@Duty_cycle2+1
   407                           
   408                           ;main_1501.c: 153: int light_delay = 3;
   409  026A  3003               	movlw	3
   410  026B  00B5               	movwf	main@light_delay
   411  026C  3000               	movlw	0
   412  026D  00B6               	movwf	main@light_delay+1
   413                           
   414                           ;main_1501.c: 155: int Curr_chan = 1;
   415  026E  3001               	movlw	1
   416  026F  00B3               	movwf	main@Curr_chan
   417  0270  3000               	movlw	0
   418  0271  00B4               	movwf	main@Curr_chan+1
   419  0272                     l690:	
   420                           ;main_1501.c: 157: while(1)
   421                           
   422                           
   423                           ;main_1501.c: 158: {
   424                           ;main_1501.c: 179: Curr_chan = 2||4||1;
   425  0272  01AA               	clrf	_main$229
   426  0273  0AAA               	incf	_main$229,f
   427  0274  082A               	movf	_main$229,w
   428  0275  00FA               	movwf	??_main
   429  0276  01FB               	clrf	??_main+1
   430  0277  087A               	movf	??_main,w
   431  0278  00B3               	movwf	main@Curr_chan
   432  0279  087B               	movf	??_main+1,w
   433  027A  00B4               	movwf	main@Curr_chan+1
   434                           
   435                           ;main_1501.c: 180: Duty_cycle = 0;
   436  027B  01B7               	clrf	main@Duty_cycle
   437  027C  01B8               	clrf	main@Duty_cycle+1
   438                           
   439                           ;main_1501.c: 181: SetDutyCycle(Curr_chan, Duty_cycle);
   440  027D  0834               	movf	main@Curr_chan+1,w
   441  027E  00F1               	movwf	SetDutyCycle@Channel+1
   442  027F  0833               	movf	main@Curr_chan,w
   443  0280  00F0               	movwf	SetDutyCycle@Channel
   444  0281  0838               	movf	main@Duty_cycle+1,w
   445  0282  00F3               	movwf	SetDutyCycle@duty_cycle_value+1
   446  0283  0837               	movf	main@Duty_cycle,w
   447  0284  00F2               	movwf	SetDutyCycle@duty_cycle_value
   448  0285  2204               	fcall	_SetDutyCycle
   449                           
   450                           ;main_1501.c: 182: do { int i; for (i = 0; i < (10000 << 9); i++) { asm ("nop"); } } whi
      +                          le(0);
   451  0286  0020               	movlb	0	; select bank0
   452  0287  01AB               	clrf	main@i
   453  0288  01AC               	clrf	main@i+1
   454  0289  082C               	movf	main@i+1,w
   455  028A  3A80               	xorlw	128
   456  028B  00FA               	movwf	??_main
   457  028C  30A0               	movlw	160
   458  028D  027A               	subwf	??_main,w
   459  028E  1D03               	skipz
   460  028F  2A92               	goto	u275
   461  0290  3000               	movlw	0
   462  0291  022B               	subwf	main@i,w
   463  0292                     u275:	
   464  0292  1803               	btfsc	3,0
   465  0293  2AA5               	goto	l710
   466  0294                     l47:	
   467  0294  0000               	nop	;# 
   468  0295  3001               	movlw	1
   469  0296  0020               	movlb	0	; select bank0
   470  0297  07AB               	addwf	main@i,f
   471  0298  3000               	movlw	0
   472  0299  3DAC               	addwfc	main@i+1,f
   473  029A  082C               	movf	main@i+1,w
   474  029B  3A80               	xorlw	128
   475  029C  00FA               	movwf	??_main
   476  029D  30A0               	movlw	160
   477  029E  027A               	subwf	??_main,w
   478  029F  1D03               	skipz
   479  02A0  2AA3               	goto	u285
   480  02A1  3000               	movlw	0
   481  02A2  022B               	subwf	main@i,w
   482  02A3                     u285:	
   483  02A3  1C03               	skipc
   484  02A4  2A94               	goto	l47
   485  02A5                     l710:	
   486                           
   487                           ;main_1501.c: 184: Duty_cycle = 0;
   488  02A5  0020               	movlb	0	; select bank0
   489  02A6  01B7               	clrf	main@Duty_cycle
   490  02A7  01B8               	clrf	main@Duty_cycle+1
   491  02A8                     l720:	
   492                           ;main_1501.c: 185: while(Duty_cycle != 1000){
   493                           
   494  02A8  30E8               	movlw	232
   495  02A9  0020               	movlb	0	; select bank0
   496  02AA  0637               	xorwf	main@Duty_cycle,w
   497  02AB  3003               	movlw	3
   498  02AC  1903               	skipnz
   499  02AD  0638               	xorwf	main@Duty_cycle+1,w
   500  02AE  1903               	btfsc	3,2
   501  02AF  2AE0               	goto	l722
   502                           
   503                           ;main_1501.c: 186: Curr_chan = 1;
   504  02B0  3001               	movlw	1
   505  02B1  00B3               	movwf	main@Curr_chan
   506  02B2  3000               	movlw	0
   507  02B3  00B4               	movwf	main@Curr_chan+1
   508                           
   509                           ;main_1501.c: 187: Duty_cycle += 1;
   510  02B4  3001               	movlw	1
   511  02B5  07B7               	addwf	main@Duty_cycle,f
   512  02B6  3000               	movlw	0
   513  02B7  3DB8               	addwfc	main@Duty_cycle+1,f
   514                           
   515                           ;main_1501.c: 188: SetDutyCycle(Curr_chan, Duty_cycle);
   516  02B8  0834               	movf	main@Curr_chan+1,w
   517  02B9  00F1               	movwf	SetDutyCycle@Channel+1
   518  02BA  0833               	movf	main@Curr_chan,w
   519  02BB  00F0               	movwf	SetDutyCycle@Channel
   520  02BC  0838               	movf	main@Duty_cycle+1,w
   521  02BD  00F3               	movwf	SetDutyCycle@duty_cycle_value+1
   522  02BE  0837               	movf	main@Duty_cycle,w
   523  02BF  00F2               	movwf	SetDutyCycle@duty_cycle_value
   524  02C0  2204               	fcall	_SetDutyCycle
   525                           
   526                           ;main_1501.c: 189: do { int i; for (i = 0; i < (light_delay << 9); i++) { asm ("nop"); }
      +                           } while(0);;
   527  02C1  0020               	movlb	0	; select bank0
   528  02C2  01A0               	clrf	main@i_232
   529  02C3  01A1               	clrf	main@i_232+1
   530  02C4                     l53:	
   531  02C4  0836               	movf	main@light_delay+1,w
   532  02C5  00FB               	movwf	??_main+1
   533  02C6  0835               	movf	main@light_delay,w
   534  02C7  00FA               	movwf	??_main
   535  02C8  3009               	movlw	9
   536  02C9                     u295:	
   537  02C9  35FA               	lslf	??_main,f
   538  02CA  0DFB               	rlf	??_main+1,f
   539  02CB  0B89               	decfsz	9,f
   540  02CC  2AC9               	goto	u295
   541  02CD  0821               	movf	main@i_232+1,w
   542  02CE  3A80               	xorlw	128
   543  02CF  00FC               	movwf	??_main+2
   544  02D0  087B               	movf	??_main+1,w
   545  02D1  3A80               	xorlw	128
   546  02D2  027C               	subwf	??_main+2,w
   547  02D3  1D03               	skipz
   548  02D4  2AD7               	goto	u305
   549  02D5  087A               	movf	??_main,w
   550  02D6  0220               	subwf	main@i_232,w
   551  02D7                     u305:	
   552  02D7  1803               	btfsc	3,0
   553  02D8  2AA8               	goto	l720
   554  02D9  0000               	nop	;# 
   555  02DA  3001               	movlw	1
   556  02DB  0020               	movlb	0	; select bank0
   557  02DC  07A0               	addwf	main@i_232,f
   558  02DD  3000               	movlw	0
   559  02DE  3DA1               	addwfc	main@i_232+1,f
   560  02DF  2AC4               	goto	l53
   561  02E0                     l722:	
   562                           ;main_1501.c: 190: }
   563                           ;main_1501.c: 191: do { int i; for (i = 0; i < (10000 << 9); i++) { asm ("nop"); } } whi
      +                          le(0);
   564                           
   565  02E0  01AD               	clrf	main@i_233
   566  02E1  01AE               	clrf	main@i_233+1
   567  02E2  082E               	movf	main@i_233+1,w
   568  02E3  3A80               	xorlw	128
   569  02E4  00FA               	movwf	??_main
   570  02E5  30A0               	movlw	160
   571  02E6  027A               	subwf	??_main,w
   572  02E7  1D03               	skipz
   573  02E8  2AEB               	goto	u325
   574  02E9  3000               	movlw	0
   575  02EA  022D               	subwf	main@i_233,w
   576  02EB                     u325:	
   577  02EB  1803               	btfsc	3,0
   578  02EC  2AFE               	goto	l730
   579  02ED                     l59:	
   580  02ED  0000               	nop	;# 
   581  02EE  3001               	movlw	1
   582  02EF  0020               	movlb	0	; select bank0
   583  02F0  07AD               	addwf	main@i_233,f
   584  02F1  3000               	movlw	0
   585  02F2  3DAE               	addwfc	main@i_233+1,f
   586  02F3  082E               	movf	main@i_233+1,w
   587  02F4  3A80               	xorlw	128
   588  02F5  00FA               	movwf	??_main
   589  02F6  30A0               	movlw	160
   590  02F7  027A               	subwf	??_main,w
   591  02F8  1D03               	skipz
   592  02F9  2AFC               	goto	u335
   593  02FA  3000               	movlw	0
   594  02FB  022D               	subwf	main@i_233,w
   595  02FC                     u335:	
   596  02FC  1C03               	skipc
   597  02FD  2AED               	goto	l59
   598  02FE                     l730:	
   599                           
   600                           ;main_1501.c: 193: Duty_cycle = 0;
   601  02FE  0020               	movlb	0	; select bank0
   602  02FF  01B7               	clrf	main@Duty_cycle
   603  0300  01B8               	clrf	main@Duty_cycle+1
   604                           
   605                           ;main_1501.c: 194: Duty_cycle2 = 1000;
   606  0301  30E8               	movlw	232
   607  0302  00A8               	movwf	main@Duty_cycle2
   608  0303  3003               	movlw	3
   609  0304  00A9               	movwf	main@Duty_cycle2+1
   610  0305                     l744:	
   611                           ;main_1501.c: 195: while(Duty_cycle != 1000){
   612                           
   613  0305  30E8               	movlw	232
   614  0306  0020               	movlb	0	; select bank0
   615  0307  0637               	xorwf	main@Duty_cycle,w
   616  0308  3003               	movlw	3
   617  0309  1903               	skipnz
   618  030A  0638               	xorwf	main@Duty_cycle+1,w
   619  030B  1903               	btfsc	3,2
   620  030C  2B47               	goto	l746
   621                           
   622                           ;main_1501.c: 196: Duty_cycle += 1;
   623  030D  3001               	movlw	1
   624  030E  07B7               	addwf	main@Duty_cycle,f
   625  030F  3000               	movlw	0
   626  0310  3DB8               	addwfc	main@Duty_cycle+1,f
   627                           
   628                           ;main_1501.c: 197: Duty_cycle2 -= 1;
   629  0311  30FF               	movlw	255
   630  0312  07A8               	addwf	main@Duty_cycle2,f
   631  0313  30FF               	movlw	255
   632  0314  3DA9               	addwfc	main@Duty_cycle2+1,f
   633                           
   634                           ;main_1501.c: 198: SetDutyCycle(4, Duty_cycle);
   635  0315  3004               	movlw	4
   636  0316  00F0               	movwf	SetDutyCycle@Channel
   637  0317  3000               	movlw	0
   638  0318  00F1               	movwf	SetDutyCycle@Channel+1
   639  0319  0838               	movf	main@Duty_cycle+1,w
   640  031A  00F3               	movwf	SetDutyCycle@duty_cycle_value+1
   641  031B  0837               	movf	main@Duty_cycle,w
   642  031C  00F2               	movwf	SetDutyCycle@duty_cycle_value
   643  031D  2204               	fcall	_SetDutyCycle
   644                           
   645                           ;main_1501.c: 199: SetDutyCycle(1, Duty_cycle2);
   646  031E  3001               	movlw	1
   647  031F  00F0               	movwf	SetDutyCycle@Channel
   648  0320  3000               	movlw	0
   649  0321  00F1               	movwf	SetDutyCycle@Channel+1
   650  0322  0020               	movlb	0	; select bank0
   651  0323  0829               	movf	main@Duty_cycle2+1,w
   652  0324  00F3               	movwf	SetDutyCycle@duty_cycle_value+1
   653  0325  0828               	movf	main@Duty_cycle2,w
   654  0326  00F2               	movwf	SetDutyCycle@duty_cycle_value
   655  0327  2204               	fcall	_SetDutyCycle
   656                           
   657                           ;main_1501.c: 200: do { int i; for (i = 0; i < (light_delay << 9); i++) { asm ("nop"); }
      +                           } while(0);;
   658  0328  0020               	movlb	0	; select bank0
   659  0329  01A2               	clrf	main@i_234
   660  032A  01A3               	clrf	main@i_234+1
   661  032B                     l65:	
   662  032B  0836               	movf	main@light_delay+1,w
   663  032C  00FB               	movwf	??_main+1
   664  032D  0835               	movf	main@light_delay,w
   665  032E  00FA               	movwf	??_main
   666  032F  3009               	movlw	9
   667  0330                     u345:	
   668  0330  35FA               	lslf	??_main,f
   669  0331  0DFB               	rlf	??_main+1,f
   670  0332  0B89               	decfsz	9,f
   671  0333  2B30               	goto	u345
   672  0334  0823               	movf	main@i_234+1,w
   673  0335  3A80               	xorlw	128
   674  0336  00FC               	movwf	??_main+2
   675  0337  087B               	movf	??_main+1,w
   676  0338  3A80               	xorlw	128
   677  0339  027C               	subwf	??_main+2,w
   678  033A  1D03               	skipz
   679  033B  2B3E               	goto	u355
   680  033C  087A               	movf	??_main,w
   681  033D  0222               	subwf	main@i_234,w
   682  033E                     u355:	
   683  033E  1803               	btfsc	3,0
   684  033F  2B05               	goto	l744
   685  0340  0000               	nop	;# 
   686  0341  3001               	movlw	1
   687  0342  0020               	movlb	0	; select bank0
   688  0343  07A2               	addwf	main@i_234,f
   689  0344  3000               	movlw	0
   690  0345  3DA3               	addwfc	main@i_234+1,f
   691  0346  2B2B               	goto	l65
   692  0347                     l746:	
   693                           ;main_1501.c: 201: }
   694                           ;main_1501.c: 202: do { int i; for (i = 0; i < (10000 << 9); i++) { asm ("nop"); } } whi
      +                          le(0);
   695                           
   696  0347  01AF               	clrf	main@i_235
   697  0348  01B0               	clrf	main@i_235+1
   698  0349  0830               	movf	main@i_235+1,w
   699  034A  3A80               	xorlw	128
   700  034B  00FA               	movwf	??_main
   701  034C  30A0               	movlw	160
   702  034D  027A               	subwf	??_main,w
   703  034E  1D03               	skipz
   704  034F  2B52               	goto	u375
   705  0350  3000               	movlw	0
   706  0351  022F               	subwf	main@i_235,w
   707  0352                     u375:	
   708  0352  1803               	btfsc	3,0
   709  0353  2B65               	goto	l754
   710  0354                     l71:	
   711  0354  0000               	nop	;# 
   712  0355  3001               	movlw	1
   713  0356  0020               	movlb	0	; select bank0
   714  0357  07AF               	addwf	main@i_235,f
   715  0358  3000               	movlw	0
   716  0359  3DB0               	addwfc	main@i_235+1,f
   717  035A  0830               	movf	main@i_235+1,w
   718  035B  3A80               	xorlw	128
   719  035C  00FA               	movwf	??_main
   720  035D  30A0               	movlw	160
   721  035E  027A               	subwf	??_main,w
   722  035F  1D03               	skipz
   723  0360  2B63               	goto	u385
   724  0361  3000               	movlw	0
   725  0362  022F               	subwf	main@i_235,w
   726  0363                     u385:	
   727  0363  1C03               	skipc
   728  0364  2B54               	goto	l71
   729  0365                     l754:	
   730                           
   731                           ;main_1501.c: 204: Duty_cycle = 0;
   732  0365  0020               	movlb	0	; select bank0
   733  0366  01B7               	clrf	main@Duty_cycle
   734  0367  01B8               	clrf	main@Duty_cycle+1
   735  0368                     l764:	
   736                           ;main_1501.c: 205: while(Duty_cycle != 1000){
   737                           
   738  0368  30E8               	movlw	232
   739  0369  0020               	movlb	0	; select bank0
   740  036A  0637               	xorwf	main@Duty_cycle,w
   741  036B  3003               	movlw	3
   742  036C  1903               	skipnz
   743  036D  0638               	xorwf	main@Duty_cycle+1,w
   744  036E  1903               	btfsc	3,2
   745  036F  2BA0               	goto	l766
   746                           
   747                           ;main_1501.c: 206: Curr_chan = 1;
   748  0370  3001               	movlw	1
   749  0371  00B3               	movwf	main@Curr_chan
   750  0372  3000               	movlw	0
   751  0373  00B4               	movwf	main@Curr_chan+1
   752                           
   753                           ;main_1501.c: 207: Duty_cycle += 1;
   754  0374  3001               	movlw	1
   755  0375  07B7               	addwf	main@Duty_cycle,f
   756  0376  3000               	movlw	0
   757  0377  3DB8               	addwfc	main@Duty_cycle+1,f
   758                           
   759                           ;main_1501.c: 208: SetDutyCycle(Curr_chan, Duty_cycle);
   760  0378  0834               	movf	main@Curr_chan+1,w
   761  0379  00F1               	movwf	SetDutyCycle@Channel+1
   762  037A  0833               	movf	main@Curr_chan,w
   763  037B  00F0               	movwf	SetDutyCycle@Channel
   764  037C  0838               	movf	main@Duty_cycle+1,w
   765  037D  00F3               	movwf	SetDutyCycle@duty_cycle_value+1
   766  037E  0837               	movf	main@Duty_cycle,w
   767  037F  00F2               	movwf	SetDutyCycle@duty_cycle_value
   768  0380  2204               	fcall	_SetDutyCycle
   769                           
   770                           ;main_1501.c: 209: do { int i; for (i = 0; i < (light_delay << 9); i++) { asm ("nop"); }
      +                           } while(0);;
   771  0381  0020               	movlb	0	; select bank0
   772  0382  01A4               	clrf	main@i_236
   773  0383  01A5               	clrf	main@i_236+1
   774  0384                     l77:	
   775  0384  0836               	movf	main@light_delay+1,w
   776  0385  00FB               	movwf	??_main+1
   777  0386  0835               	movf	main@light_delay,w
   778  0387  00FA               	movwf	??_main
   779  0388  3009               	movlw	9
   780  0389                     u395:	
   781  0389  35FA               	lslf	??_main,f
   782  038A  0DFB               	rlf	??_main+1,f
   783  038B  0B89               	decfsz	9,f
   784  038C  2B89               	goto	u395
   785  038D  0825               	movf	main@i_236+1,w
   786  038E  3A80               	xorlw	128
   787  038F  00FC               	movwf	??_main+2
   788  0390  087B               	movf	??_main+1,w
   789  0391  3A80               	xorlw	128
   790  0392  027C               	subwf	??_main+2,w
   791  0393  1D03               	skipz
   792  0394  2B97               	goto	u405
   793  0395  087A               	movf	??_main,w
   794  0396  0224               	subwf	main@i_236,w
   795  0397                     u405:	
   796  0397  1803               	btfsc	3,0
   797  0398  2B68               	goto	l764
   798  0399  0000               	nop	;# 
   799  039A  3001               	movlw	1
   800  039B  0020               	movlb	0	; select bank0
   801  039C  07A4               	addwf	main@i_236,f
   802  039D  3000               	movlw	0
   803  039E  3DA5               	addwfc	main@i_236+1,f
   804  039F  2B84               	goto	l77
   805  03A0                     l766:	
   806                           ;main_1501.c: 210: }
   807                           ;main_1501.c: 211: do { int i; for (i = 0; i < (10000 << 9); i++) { asm ("nop"); } } whi
      +                          le(0);
   808                           
   809  03A0  01B1               	clrf	main@i_237
   810  03A1  01B2               	clrf	main@i_237+1
   811  03A2  0832               	movf	main@i_237+1,w
   812  03A3  3A80               	xorlw	128
   813  03A4  00FA               	movwf	??_main
   814  03A5  30A0               	movlw	160
   815  03A6  027A               	subwf	??_main,w
   816  03A7  1D03               	skipz
   817  03A8  2BAB               	goto	u425
   818  03A9  3000               	movlw	0
   819  03AA  0231               	subwf	main@i_237,w
   820  03AB                     u425:	
   821  03AB  1803               	btfsc	3,0
   822  03AC  2BBE               	goto	l774
   823  03AD                     l83:	
   824  03AD  0000               	nop	;# 
   825  03AE  3001               	movlw	1
   826  03AF  0020               	movlb	0	; select bank0
   827  03B0  07B1               	addwf	main@i_237,f
   828  03B1  3000               	movlw	0
   829  03B2  3DB2               	addwfc	main@i_237+1,f
   830  03B3  0832               	movf	main@i_237+1,w
   831  03B4  3A80               	xorlw	128
   832  03B5  00FA               	movwf	??_main
   833  03B6  30A0               	movlw	160
   834  03B7  027A               	subwf	??_main,w
   835  03B8  1D03               	skipz
   836  03B9  2BBC               	goto	u435
   837  03BA  3000               	movlw	0
   838  03BB  0231               	subwf	main@i_237,w
   839  03BC                     u435:	
   840  03BC  1C03               	skipc
   841  03BD  2BAD               	goto	l83
   842  03BE                     l774:	
   843                           
   844                           ;main_1501.c: 213: Duty_cycle = 1000;
   845  03BE  30E8               	movlw	232
   846  03BF  0020               	movlb	0	; select bank0
   847  03C0  00B7               	movwf	main@Duty_cycle
   848  03C1  3003               	movlw	3
   849  03C2  00B8               	movwf	main@Duty_cycle+1
   850  03C3                     l786:	
   851                           ;main_1501.c: 214: while(Duty_cycle != 0){
   852                           
   853  03C3  0020               	movlb	0	; select bank0
   854  03C4  0837               	movf	main@Duty_cycle,w
   855  03C5  0438               	iorwf	main@Duty_cycle+1,w
   856  03C6  1903               	btfsc	3,2
   857  03C7  2A72               	goto	l690
   858                           
   859                           ;main_1501.c: 215: Duty_cycle -= 1;
   860  03C8  30FF               	movlw	255
   861  03C9  07B7               	addwf	main@Duty_cycle,f
   862  03CA  30FF               	movlw	255
   863  03CB  3DB8               	addwfc	main@Duty_cycle+1,f
   864                           
   865                           ;main_1501.c: 216: SetDutyCycle(1, Duty_cycle);
   866  03CC  3001               	movlw	1
   867  03CD  00F0               	movwf	SetDutyCycle@Channel
   868  03CE  3000               	movlw	0
   869  03CF  00F1               	movwf	SetDutyCycle@Channel+1
   870  03D0  0838               	movf	main@Duty_cycle+1,w
   871  03D1  00F3               	movwf	SetDutyCycle@duty_cycle_value+1
   872  03D2  0837               	movf	main@Duty_cycle,w
   873  03D3  00F2               	movwf	SetDutyCycle@duty_cycle_value
   874  03D4  2204               	fcall	_SetDutyCycle
   875                           
   876                           ;main_1501.c: 217: SetDutyCycle(4, Duty_cycle);
   877  03D5  3004               	movlw	4
   878  03D6  00F0               	movwf	SetDutyCycle@Channel
   879  03D7  3000               	movlw	0
   880  03D8  00F1               	movwf	SetDutyCycle@Channel+1
   881  03D9  0020               	movlb	0	; select bank0
   882  03DA  0838               	movf	main@Duty_cycle+1,w
   883  03DB  00F3               	movwf	SetDutyCycle@duty_cycle_value+1
   884  03DC  0837               	movf	main@Duty_cycle,w
   885  03DD  00F2               	movwf	SetDutyCycle@duty_cycle_value
   886  03DE  2204               	fcall	_SetDutyCycle
   887                           
   888                           ;main_1501.c: 218: do { int i; for (i = 0; i < (light_delay << 9); i++) { asm ("nop"); }
      +                           } while(0);;
   889  03DF  0020               	movlb	0	; select bank0
   890  03E0  01A6               	clrf	main@i_238
   891  03E1  01A7               	clrf	main@i_238+1
   892  03E2                     l89:	
   893  03E2  0836               	movf	main@light_delay+1,w
   894  03E3  00FB               	movwf	??_main+1
   895  03E4  0835               	movf	main@light_delay,w
   896  03E5  00FA               	movwf	??_main
   897  03E6  3009               	movlw	9
   898  03E7                     u445:	
   899  03E7  35FA               	lslf	??_main,f
   900  03E8  0DFB               	rlf	??_main+1,f
   901  03E9  0B89               	decfsz	9,f
   902  03EA  2BE7               	goto	u445
   903  03EB  0827               	movf	main@i_238+1,w
   904  03EC  3A80               	xorlw	128
   905  03ED  00FC               	movwf	??_main+2
   906  03EE  087B               	movf	??_main+1,w
   907  03EF  3A80               	xorlw	128
   908  03F0  027C               	subwf	??_main+2,w
   909  03F1  1D03               	skipz
   910  03F2  2BF5               	goto	u455
   911  03F3  087A               	movf	??_main,w
   912  03F4  0226               	subwf	main@i_238,w
   913  03F5                     u455:	
   914  03F5  1803               	btfsc	3,0
   915  03F6  2BC3               	goto	l786
   916  03F7  0000               	nop	;# 
   917  03F8  3001               	movlw	1
   918  03F9  0020               	movlb	0	; select bank0
   919  03FA  07A6               	addwf	main@i_238,f
   920  03FB  3000               	movlw	0
   921  03FC  3DA7               	addwfc	main@i_238+1,f
   922  03FD  2BE2               	goto	l89
   923  03FE                     __end_of_main:	
   924                           ;main_1501.c: 219: }
   925                           ;main_1501.c: 221: }
   926                           ;main_1501.c: 222: return (0);
   927                           ;	Return value of _main is never used
   928                           
   929                           
   930                           	psect	text1
   931  0204                     __ptext1:	
   932 ;; *************** function _SetDutyCycle *****************
   933 ;; Defined at:
   934 ;;		line 57 in file "main_1501.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  Channel         2    0[COMMON] int 
   937 ;;  duty_cycle_v    2    2[COMMON] int 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;		None               void
   942 ;; Registers used:
   943 ;;		wreg, status,2
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0
   949 ;;      Params:         4       0
   950 ;;      Locals:         0       0
   951 ;;      Temps:          2       0
   952 ;;      Totals:         6       0
   953 ;;Total ram usage:        6 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _SetDutyCycle
   964  0204                     _SetDutyCycle:	
   965                           
   966                           ;main_1501.c: 59: if( Channel & 1){
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in _SetDutyCycle: [wreg+status,2]
   970  0204  1C70               	btfss	SetDutyCycle@Channel,0
   971  0205  2A16               	goto	l636
   972                           
   973                           ;main_1501.c: 60: PWM1DCL = duty_cycle_value & 0xc0;
   974  0206  0872               	movf	SetDutyCycle@duty_cycle_value,w
   975  0207  39C0               	andlw	192
   976  0208  002C               	movlb	12	; select bank12
   977  0209  0091               	movwf	17	;volatile
   978                           
   979                           ;main_1501.c: 61: PWM1DCH = (duty_cycle_value >> 2);
   980  020A  0873               	movf	SetDutyCycle@duty_cycle_value+1,w
   981  020B  00F5               	movwf	??_SetDutyCycle+1
   982  020C  0872               	movf	SetDutyCycle@duty_cycle_value,w
   983  020D  00F4               	movwf	??_SetDutyCycle
   984  020E  0D75               	rlf	??_SetDutyCycle+1,w
   985  020F  0CF5               	rrf	??_SetDutyCycle+1,f
   986  0210  0CF4               	rrf	??_SetDutyCycle,f
   987  0211  0D75               	rlf	??_SetDutyCycle+1,w
   988  0212  0CF5               	rrf	??_SetDutyCycle+1,f
   989  0213  0CF4               	rrf	??_SetDutyCycle,f
   990  0214  0874               	movf	??_SetDutyCycle,w
   991  0215  0092               	movwf	18	;volatile
   992  0216                     l636:	
   993                           
   994                           ;main_1501.c: 62: }
   995                           ;main_1501.c: 63: if( Channel & 2){
   996  0216  1CF0               	btfss	SetDutyCycle@Channel,1
   997  0217  2A28               	goto	l642
   998                           
   999                           ;main_1501.c: 64: PWM4DCL = duty_cycle_value & 0xc0;
  1000  0218  0872               	movf	SetDutyCycle@duty_cycle_value,w
  1001  0219  39C0               	andlw	192
  1002  021A  002C               	movlb	12	; select bank12
  1003  021B  009A               	movwf	26	;volatile
  1004                           
  1005                           ;main_1501.c: 65: PWM4DCH = (duty_cycle_value >> 2);
  1006  021C  0873               	movf	SetDutyCycle@duty_cycle_value+1,w
  1007  021D  00F5               	movwf	??_SetDutyCycle+1
  1008  021E  0872               	movf	SetDutyCycle@duty_cycle_value,w
  1009  021F  00F4               	movwf	??_SetDutyCycle
  1010  0220  0D75               	rlf	??_SetDutyCycle+1,w
  1011  0221  0CF5               	rrf	??_SetDutyCycle+1,f
  1012  0222  0CF4               	rrf	??_SetDutyCycle,f
  1013  0223  0D75               	rlf	??_SetDutyCycle+1,w
  1014  0224  0CF5               	rrf	??_SetDutyCycle+1,f
  1015  0225  0CF4               	rrf	??_SetDutyCycle,f
  1016  0226  0874               	movf	??_SetDutyCycle,w
  1017  0227  009B               	movwf	27	;volatile
  1018  0228                     l642:	
  1019                           
  1020                           ;main_1501.c: 66: }
  1021                           ;main_1501.c: 67: if( Channel & 4){
  1022  0228  1D70               	btfss	SetDutyCycle@Channel,2
  1023  0229  0008               	return
  1024                           
  1025                           ;main_1501.c: 68: PWM3DCL = duty_cycle_value & 0xc0;
  1026  022A  0872               	movf	SetDutyCycle@duty_cycle_value,w
  1027  022B  39C0               	andlw	192
  1028  022C  002C               	movlb	12	; select bank12
  1029  022D  0097               	movwf	23	;volatile
  1030                           
  1031                           ;main_1501.c: 69: PWM3DCH = (duty_cycle_value >> 2);
  1032  022E  0873               	movf	SetDutyCycle@duty_cycle_value+1,w
  1033  022F  00F5               	movwf	??_SetDutyCycle+1
  1034  0230  0872               	movf	SetDutyCycle@duty_cycle_value,w
  1035  0231  00F4               	movwf	??_SetDutyCycle
  1036  0232  0D75               	rlf	??_SetDutyCycle+1,w
  1037  0233  0CF5               	rrf	??_SetDutyCycle+1,f
  1038  0234  0CF4               	rrf	??_SetDutyCycle,f
  1039  0235  0D75               	rlf	??_SetDutyCycle+1,w
  1040  0236  0CF5               	rrf	??_SetDutyCycle+1,f
  1041  0237  0CF4               	rrf	??_SetDutyCycle,f
  1042  0238  0874               	movf	??_SetDutyCycle,w
  1043  0239  0098               	movwf	24	;volatile
  1044  023A  0008               	return
  1045  023B                     __end_of_SetDutyCycle:	
  1046  007E                     btemp	set	126	;btemp
  1047  007E                     wtemp	set	126
  1048  007E                     wtemp0	set	126
  1049  0080                     wtemp1	set	128
  1050  0082                     wtemp2	set	130
  1051  0084                     wtemp3	set	132
  1052  0086                     wtemp4	set	134
  1053  0088                     wtemp5	set	136
  1054  007F                     wtemp6	set	127
  1055  007E                     ttemp	set	126
  1056  007E                     ttemp0	set	126
  1057  0081                     ttemp1	set	129
  1058  0084                     ttemp2	set	132
  1059  0087                     ttemp3	set	135
  1060  007F                     ttemp4	set	127
  1061  007E                     ltemp	set	126
  1062  007E                     ltemp0	set	126
  1063  0082                     ltemp1	set	130
  1064  0086                     ltemp2	set	134
  1065  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            48     25      25

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SetDutyCycle

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    28      4    1518
                                              6 COMMON     7     3      4
                                              0 BANK0     25    25      0
                       _SetDutyCycle
 ---------------------------------------------------------------------------------
 (1) _SetDutyCycle                                         6     2      4     800
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetDutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              30      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            30      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               30     19      19       5       52.1%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0       0       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Aug 14 19:52:24 2015

                 __CFG_CP$OFF 0000                            l53 02C4                            l71 0354  
                          l47 0294                            l65 032B                            l83 03AD  
                          l59 02ED                            l77 0384                            l89 03E2  
                 __CFG_LVP$ON 0000                           l710 02A5                           l720 02A8  
                         l642 0228                           l730 02FE                           l722 02E0  
                         l636 0216                           l744 0305                           l754 0365  
                         l746 0347                           l690 0272                           l764 0368  
                         l774 03BE                           l766 03A0                           l786 03C3  
                         u305 02D7                           u405 0397                           u325 02EB  
                         _PR2 001B                           u335 02FC                           u425 03AB  
                         u345 0330                           u435 03BC                           u355 033E  
                         u275 0292                           u445 03E7                           u285 02A3  
                         u455 03F5                           u375 0352                           u295 02C9  
                         u385 0363                           u395 0389                  __CFG_BORV$HI 0000  
                         wreg 0009                  __CFG_WRT$OFF 0000                 main@Curr_chan 0033  
                        _main 023B                          btemp 007E                 __CFG_BOREN$ON 0000  
                        ltemp 007E                          start 0001                          ttemp 007E  
                        wtemp 007E                 __CFG_LPBOR$ON 0000                         ?_main 0076  
               __CFG_WDTE$OFF 0000                 __CFG_PWRTE$ON 0000                         main@i 002B  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F                main@Duty_cycle 0037  
              __CFG_MCLRE$OFF 0000               __initialization 03FE                  __end_of_main 03FE  
                      ??_main 007A           SetDutyCycle@Channel 0070                 ?_SetDutyCycle 0070  
             main@Duty_cycle2 0028       __end_of__initialization 03FE                __pcstackCOMMON 0070  
              ??_SetDutyCycle 0074                    __pmaintext 023B                       _PWM1DCH 0612  
                     _PWM1DCL 0611                       _PWM3DCH 0618                       _PWM3DCL 0617  
                     _PWM4DCH 061B                       _PWM1CON 0613                       _PWM4DCL 061A  
                     _PWM3CON 0619                       _PWM4CON 061C               __CFG_STVREN$OFF 0000  
                     __ptext0 0000                       __ptext1 0204                     _T2CONbits 001C  
        end_of_initialization 03FE          __end_of_SetDutyCycle 023B              __CFG_FOSC$INTOSC 0000  
                   _TRISAbits 008C                   _DACCON0bits 0118           start_initialization 03FE  
                   ___latbits 0000                 __pcstackBANK0 0020         __size_of_SetDutyCycle 0037  
                _SetDutyCycle 0204                      _PIR1bits 0011               main@light_delay 0035  
                  _ADCON0bits 009D                     main@i_232 0020                     main@i_233 002D  
                   main@i_234 0022                     main@i_235 002F                     main@i_236 0024  
                   main@i_237 0031                     main@i_238 0026                    _ANSELAbits 018C  
                    _main$229 002A                 __size_of_main 01C3                      main@argc 0076  
                    main@argv 0078  SetDutyCycle@duty_cycle_value 0072             __CFG_CLKOUTEN$OFF 0000  
                  _OSCCONbits 0099  
